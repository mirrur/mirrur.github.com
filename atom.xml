<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Mirrur]]></title>
  <link href="http://mirrur.github.io/atom.xml" rel="self"/>
  <link href="http://mirrur.github.io/"/>
  <updated>2014-11-09T23:42:36+08:00</updated>
  <id>http://mirrur.github.io/</id>
  <author>
    <name><![CDATA[mirrur]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[php 实现图片等文件的直接下载]]></title>
    <link href="http://mirrur.github.io/blog/2014/11/09/php-shi-xian-tu-pian-deng-wen-jian-de-zhi-jie-xia-zai/"/>
    <updated>2014-11-09T23:24:41+08:00</updated>
    <id>http://mirrur.github.io/blog/2014/11/09/php-shi-xian-tu-pian-deng-wen-jian-de-zhi-jie-xia-zai</id>
    <content type="html"><![CDATA[<p>html文件:</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;download pic file&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;a href="download.php?filename=slider.jpg"&gt;下载slide.png&lt;/a&gt;
    &lt;a href="download.php?filename=img/350.png"&gt;下载slide.png&lt;/a&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>filename=slider.jpg<br/>
filename=img/slider.jpg //文件所在路径</p>

<p>php文件download.php:</p>

<pre><code>&lt;?php
$filename = $_GET['filename'];
header('content-disposition:attachment;filename='.basename($filename));
header('content-length:'.filesize($filename));
readfile($filename);
</code></pre>

<p>filename = basename($filename) //设置下载下来的文件名称<br/>
basename($filename) //返回路径中的文件名部分<br/>
filesize($filename) //返回指定文件的大小<br/>
readfile($filename) //输出一个文件</p>

<p>本文链接：<a href="http://mirrur.github.io/blog/2014/11/09/php-shi-xian-tu-pian-deng-wen-jian-de-zhi-jie-xia-zai">php 实现图片等文件的直接下载</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[服务器开启Gzip压缩但js文件并无压缩]]></title>
    <link href="http://mirrur.github.io/blog/2014/11/07/fu-wu-qi-kai-qi-gzipya-suo-dan-jswen-jian-bing-wu-ya-suo/"/>
    <updated>2014-11-07T00:00:00+08:00</updated>
    <id>http://mirrur.github.io/blog/2014/11/07/fu-wu-qi-kai-qi-gzipya-suo-dan-jswen-jian-bing-wu-ya-suo</id>
    <content type="html"><![CDATA[<p>最近在做优化，发现网站的js文件没有启用Gzip压缩，已确定服务器开启了Gzip压缩了，但是单单对js无效，最后才发现原来是配置文件里的gzip_types没有设置对，不同网站js的content-type类型可能不一样，有的可能是text/javascript，有的可能是application/javascript，具体可以查看文件的header信息，也可用chrome开发者工具的网络板块中查看文件的type类型:</p>

<p><br/></p>

<p><img src="http://mirrur.github.io/images/postImg/contentType.jpg" /></p>

<p><br/></p>

<p>本文链接：<a href="http://mirrur.github.io/blog/2014/11/07/fu-wu-qi-kai-qi-gzipya-suo-dan-jswen-jian-bing-wu-ya-suo">服务器开启Gzip压缩但js文件并无压缩</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一个超酷slider插件]]></title>
    <link href="http://mirrur.github.io/blog/2014/10/29/yi-ge-chao-ku-slidercha-jian/"/>
    <updated>2014-10-29T22:36:34+08:00</updated>
    <id>http://mirrur.github.io/blog/2014/10/29/yi-ge-chao-ku-slidercha-jian</id>
    <content type="html"><![CDATA[<p>今天看到国外的一个slider插件感觉好酷哦~ 效果很丰富~ 看到最后，发现有人评论说在ie下好像有问题，就去看了下，发现还真有问题，ie6,7下slider下面的控制按钮不见了，去看了人家的js，貌似没什么情况啊，最后发现原来是text-indent和display:inline-block;惹的祸，改成display:block; float:left;就能在ie7,8下正常显示了哦。
<br/></p>

<p><img src="http://mirrur.github.io/images/postImg/slider.jpg" /></p>

<p><br/></p>

<p><a href="http://www.egrappler.com/jquery-image-slider-quake-slider/jquery-image-slider-quake-slider.zip">插件下载</a> |
<a href="http://www.egrappler.com/jquery-image-content-slider-plugin-quake-slider/#comment-310726">使用说明</a></p>

<p><br/></p>

<p>本文链接：<a href="http://mirrur.github.io/blog/2014/10/29/yi-ge-chao-ku-slidercha-jian/">一个超酷slider插件</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[元素的各种居中问题]]></title>
    <link href="http://mirrur.github.io/blog/2014/09/27/yuan-su-de-ge-chong-ju-zhong-wen-ti/"/>
    <updated>2014-09-27T15:59:53+08:00</updated>
    <id>http://mirrur.github.io/blog/2014/09/27/yuan-su-de-ge-chong-ju-zhong-wen-ti</id>
    <content type="html"><![CDATA[<p>居中有水平居中和垂直居中，各种居中又分多种情况。</p>

<h4>水平居中</h4>

<p>行内元素居中：text-align: center;      <br/>
块级元素居中： <br/>
   A. 元素宽度确定： margin: x auto;   <br/>
   B. 元素宽度不确定（三种实现方法）：</p>

<ul>
<li>1.table实现,不用设置width，对table设置margin: x auto; 就ok了</li>
<li>2.父元素text-align: center;<br/>
  居中的子元素display: inline;//这样的话子元素就不能自定义宽度咯</li>
<li>3.父元素float起来，并设position: relative; left: 50%;     <br/>
  子元素position:relative; left: -50%;</li>
</ul>


<h4>垂直居中</h4>

<p>父元素高度不确定：父元素设置上下padding   <br/>
父元素高度确定:<br/>
A. 单行文本：设置父元素line-height的值等于height的值      <br/>
B. 多行文本（两种实现方式）：</p>

<ul>
<li>1.用table包装，设置td/th为vertical-align: middle;</li>
<li>2.设置祖先元素的display:table-cell;//ie8以上及ff支持  <br/>
  兼容ie6/7给父子两元素relative定位设top: 50%和top: -50%</li>
</ul>


<p>本文链接：<a href="http://mirrur.github.io/blog/2014/09/27/yuan-su-de-ge-chong-ju-zhong-wen-ti/">元素的各种居中问题</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一个简单的slider插件]]></title>
    <link href="http://mirrur.github.io/blog/2014/09/24/yi-ge-jian-dan-de-slidercha-jian/"/>
    <updated>2014-09-24T22:12:43+08:00</updated>
    <id>http://mirrur.github.io/blog/2014/09/24/yi-ge-jian-dan-de-slidercha-jian</id>
    <content type="html"><![CDATA[<p>之前在项目中要用到一个点击切换的slider，本来这是比较常见的效果，成熟插件也已经有好多，但这次要的效果有点不一样。所以自己搞了个。顺便学了下如何写插件，嘿嘿~</p>

<div class="sliderCont">
    <ul class="sliderList">
        <li>
            <img src="http://mirrur.github.io/images/pluginDemo/mirrur.png" />
        </li>
        <li>
            <img src="http://mirrur.github.io/images/pluginDemo/mirrur.png" />
        </li>
        <li>
            <img src="http://mirrur.github.io/images/pluginDemo/mirrur.png" />
        </li>
        <li>
            <img src="http://mirrur.github.io/images/pluginDemo/mirrur.png" />
        </li>
    </ul>
    <div class="leftCov"></div>
    <div class="rightCov"></div>
    <span class="arrow" id="pre">pre</span>
    <span class="arrow" id="next">next</span>
</div>


<p><a href="https://github.com/mirrur/Slider-Demo/archive/master.zip">Download</a></p>

<p>本文链接：<a href="http://mirrur.github.io/blog/2014/09/24/yi-ge-jian-dan-de-slidercha-jian/">一个简单的slider插件</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[同一个页面中多个script标签中代码运行情况]]></title>
    <link href="http://mirrur.github.io/blog/2014/09/20/tong-ge-ye-mian-zhong-duo-ge-biao-qian-zhong-dai-ma-yun-xing-qing-kuang/"/>
    <updated>2014-09-20T21:46:15+08:00</updated>
    <id>http://mirrur.github.io/blog/2014/09/20/tong-ge-ye-mian-zhong-duo-ge-biao-qian-zhong-dai-ma-yun-xing-qing-kuang</id>
    <content type="html"><![CDATA[<p>情况①，函数声明提前，后面定义的f1覆盖了前面的f1，故执行到alert时输出6</p>

<pre><code> &lt;script type="text/javascript"&gt;
          var a, b, c;
          function f1(b,c){
               a = b + c;
               return a;
          }
          alert(f1(2,3));
          function f1(b,c){
               a = b * c;
               return a;
          }
 &lt;/script&gt;
//输出6
</code></pre>

<p>情况②，JS是按块加载的。每个<code>&lt;script/&gt;</code>标签作为一块。按顺序执行，在第一个代码块中，f1还没被覆盖，故执行时输出5，执行到第二个代码块，f1被重新定义，此时会alert时输出6</p>

<pre><code> &lt;script type="text/javascript"&gt;
      var a, b, c;
      function f1(b,c){
           a = b + c;
           return a;
      }
      alert(f1(2,3));
 &lt;/script&gt;
 &lt;script type="text/javascript"&gt;    
      function f1(b,c){
           a = b * c;
           return a;
      }
 &lt;/script&gt;
//输出5
</code></pre>

<p>本文链接：<a href="http://mirrur.github.io/blog/2014/09/20/tong-ge-ye-mian-zhong-duo-ge-biao-qian-zhong-dai-ma-yun-xing-qing-kuang/">同一个页面中多个script标签中代码运行情况</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IE条件注释]]></title>
    <link href="http://mirrur.github.io/blog/2014/09/18/ietiao-jian-zhu-shi/"/>
    <updated>2014-09-18T16:46:46+08:00</updated>
    <id>http://mirrur.github.io/blog/2014/09/18/ietiao-jian-zhu-shi</id>
    <content type="html"><![CDATA[<p>条件注释认识：<br/>
1.IE条件注释是IE专有的，能够根据条件显示代码块。<br/>
2.在其他浏览器看来条件注释是常规注释，因此本质上是无害的。<br/>
3.条件注释在IE5中首次出现，故只对IE5及以上的版本有效。</p>

<p>主要缺点：<br/>
条件注释放在html文件中而不是css中。若IE版本变动，不得不到每个页面中去更新维护。</p>

<p>条件：<br/>
gt : greater than，选择条件版本以上版本，不包含条件版本<br/>
lt : less than，选择条件版本以下版本，不包含条件版本<br/>
gte : greater than or equal，选择条件版本以上版本，包含条件版本<br/>
lte : less than or equal，选择条件版本以下版本，包含条件版本<br/>
! : 选择条件版本以外所有版本，无论高低</p>

<pre><code>&lt;!--[if lt IE 7 ]&gt;&lt;html class="ie6" lang="zh-cn"&gt;&lt;![endif]--&gt;
&lt;!--[if IE 7 ]&gt;&lt;html class="ie7" lang="zh-cn"&gt;&lt;![endif]--&gt;
&lt;!--[if IE 8 ]&gt;&lt;html class="ie8" lang="zh-cn"&gt;&lt;![endif]--&gt;
&lt;!--[if IE 9 ]&gt;&lt;html class="ie9" lang="zh-cn"&gt;&lt;![endif]--&gt;
&lt;!--[if (gt IE 9)|!(IE)]&gt;&lt;!--&gt;&lt;html class="" lang="zh-cn"&gt;&lt;!--&lt;![endif]--&gt;
</code></pre>

<p>本文链接：<a href="http://mirrur.github.io/blog/2014/09/18/ietiao-jian-zhu-shi/">IE条件注释</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[javascript函数认识]]></title>
    <link href="http://mirrur.github.io/blog/2014/09/16/javascripthan-shu-ren-shi/"/>
    <updated>2014-09-16T12:08:19+08:00</updated>
    <id>http://mirrur.github.io/blog/2014/09/16/javascripthan-shu-ren-shi</id>
    <content type="html"><![CDATA[<p>①函数实际上是对象，每个函数都是Function类型的实例，具有属性和方法。<br/>
②函数是对象，故函数名实际是一个指向函数对象的指针，不会与某个函数绑定。</p>

<p>③函数定义三种方式：</p>

<blockquote><p>  a、函数声明：function a(){ &hellip; }<br/>
  b、函数表达式定义 :var a = function(){ &hellip; }<br/>
  c、Function构造函数:var a = new Function(a, b, c) //最后一个参数始终是函数体，不推荐，两次解析代码，影响性能</p></blockquote>

<p>④函数名仅是指向函数的指针，与包含对象指针的其他变量无不同。【不带括号的函数名访问的是函数指针】<br/>
⑤函数名是函数的指针，故定义同名函数，后者会覆盖前者，所以js中没有函数重载的概念。</p>

<blockquote><p>   函数重载：多个函数用同一个名字，但参数表即参数的个数或数据类型可以不同，调用的时候，虽然方法名字相同，但根据参数表可以自动调用对应的函数。</p></blockquote>

<p>⑥函数声明与函数表达式的区别：</p>

<blockquote><p>  a、他俩唯一的区别在于解析器在向执行环境中加载数据时，顺序不一样。<br/>
  b、解析器先读取函数声明，并使其在执行任何代码之前可调用【声明提前】<br/>
  c、函数表达式要等到解析器执行到它所在的代码行时，才会真正被解析执行。<br/>
  d、函数声明提升过程，读取并将函数声明添加到执行环境中。</p></blockquote>

<p>⑦js中函数名本身就是一个变量，故函数可做为值来使用：</p>

<blockquote><p>  a、将函数像传递参数一样传递给另一个函数<br/>
  b、将一个函数作为另一个函数的结果返回<br/>
  c、可以从一个函数中返回另一个函数</p></blockquote>

<p>⑧在函数内部有两个特殊的对象：</p>

<blockquote><p>  a、arguments是一个类数组对象，包含传入函数中的所有参数，主要用途是保存函数参数。<br/>
【该对象有一属性callee，该属性是一个指针，指向拥有这个arguments对象的函数】<br/>
  b、this引用的是函数据以执行的环境对象<br/>
【哪个对象调用函数，this就指向谁；函数名就一变量，故不管那个对象调用函数，func1()和o.func1()指向的都是同一个函数】<br/>
  c、另一对象属性caller，保存着调用当前函数的函数引用<br/>
【B函数中调用了A，此时A.caller将指向B函数】</p></blockquote>

<p>⑨函数的属性和方法：</p>

<blockquote><p>  a、每个函数包含两个属性：length和prototype<br/>
  *   Ⅰ. length：函数希望接收的命名参数的个数<br/>
  *   Ⅱ. prototype：保存所有实例方法的真正所在<br/>
  b、每个函数都包含两个非继承而来的方法：apply()和call()作用都是在特定的作用域中调用函数，相当于设置函数体内this的值【扩充作用域】。区别仅在于接收参数的方式不同。<br/>
  c、bind()：创建一个函数的实例，this绑定到传给bind的函数的值<br/>
  d、toLocaleString()和toString()：返回函数的代码<br/>
  e、valueOf()：返回函数的代码</p></blockquote>

<p>本文链接：<a href="http://mirrur.github.io/blog/2014/09/16/javascripthan-shu-ren-shi/">javascript函数认识</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[万能的浮动元素清除]]></title>
    <link href="http://mirrur.github.io/blog/2014/09/15/mo-neng-de-fu-dong-yuan-su-qing-chu/"/>
    <updated>2014-09-15T14:27:13+08:00</updated>
    <id>http://mirrur.github.io/blog/2014/09/15/mo-neng-de-fu-dong-yuan-su-qing-chu</id>
    <content type="html"><![CDATA[<p>刚开始学前端知识时，在书上看到清除浮动用的是增加一个空标签 <code>&lt;div class="clear"&gt;&lt;/div&gt;</code>
这种方法是在浮动元素的后面增加一个非浮动元素，这样便改变了html结构，增加了无语义冗余标签。后来在真正工作中，才知道原来有更好的清除方法。</p>

<pre><code>/**
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    contenteditable attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that are clearfixed.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.cf:before,
.cf:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.cf:after {
    clear: both;
}

/**
 * For IE 6/7 only
 * Include this rule to trigger hasLayout and contain floats.
 */
.cf {
    *zoom: 1;
}
</code></pre>

<p>原理：<br/>
①利用css伪类选择符，在父容器的尾部创建一个非浮动块级子元素，元素内容是空。<br/>
②IE 6不支持:after选择符，需用zoom激活ie/7的<a href="http://mirrur.github.io/blog/2014/09/13/ie-layoutbu-ju-de-ren-shi/">hasLayout</a></p>

<p>浏览器支持: Firefox 3.5+, Safari 4+, Chrome, Opera 9+, IE 6+</p>

<p>参考链接：<a href="http://nicolasgallagher.com/micro-clearfix-hack/">A new micro clearfix hack</a><br/>
本文链接：<a href="http://mirrur.github.io/blog/2014/09/15/mo-neng-de-fu-dong-yuan-su-qing-chu/">万能的浮动元素清除</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[浏览器兼容问题集]]></title>
    <link href="http://mirrur.github.io/blog/2014/09/15/liu-lan-qi-jian-rong-wen-ti-ji/"/>
    <updated>2014-09-15T14:25:21+08:00</updated>
    <id>http://mirrur.github.io/blog/2014/09/15/liu-lan-qi-jian-rong-wen-ti-ji</id>
    <content type="html"><![CDATA[<p>浏览器兼容这是前端必须面对的问题，我在项目中也会经常遇到，网上也有很多关于兼容问题的帖子，在这里只是简单的整理下经典的我遇到的。</p>

<p>①不同浏览器的标签默认的margin和padding不同。<br/>
解决：样式重置 *{margin:0;padding:0;}<br/>
②双外边距浮动bug。块级元素设置浮动后，在有横向margin的情况下，ie6中显示的margin比实际设置的大双倍。<br/>
解决：将块级元素的display设置为inline</p>

<p>③img标签引入两图片，出现莫名的间距问题。<br/>
解决：float或者在html代码中去掉img标签间的空格或回车<br/>
④ie6不支持min-height（可以说height的值在它看来就是最小高度）<br/>
解决：法一height:auto !important; min-height:20px; height:20px;<br/>
//原理ie6不认识！important，故这里height是20px，但超出这个值时，ie会自动撑开，ie7以上及其他高级浏览器认识！important，所以此句相当于height:auto !important; min-height:20px;<br/>
法二min-height:20px; <em>height:20px;<br/>
//有确定值的</em>height只有ie6认识</p>

<p>⑤CSS透明<br/>
解决IE：filter:progid:DXImageTransform.Microsoft.Alpha(style=0,opacity=60)<br/>
FF：opacity:0.6<br/>
⑥div居中问题,vertical-align:middle对于IE浏览器来说没有效果。<br/>
解决：将文字的行高设置与DIV一样</p>

<p>BTW, 浏览器hacker规则：<br/>
ie6能识别 _ 和 *<br/>
ie7能识别 * 和 ！important<br/>
FF 能识别！important</p>

<p>本文链接：<a href="http://mirrur.github.io/blog/2014/09/15/liu-lan-qi-jian-rong-wen-ti-ji/">浏览器兼容问题集</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jquery1.9 下检测浏览器类型和版本]]></title>
    <link href="http://mirrur.github.io/blog/2014/09/15/jquery1-dot-9-xia-jian-ce-liu-lan-qi-lei-xing-he-ban-ben/"/>
    <updated>2014-09-15T14:24:14+08:00</updated>
    <id>http://mirrur.github.io/blog/2014/09/15/jquery1-dot-9-xia-jian-ce-liu-lan-qi-lei-xing-he-ban-ben</id>
    <content type="html"><![CDATA[<p>浏览器检测,$.browser方法在jquery1.9版本已经被剔除，项目中刚好遇到这个问题,各种百度,试过好多方法都没用，只有下面这个是可行的,贴出来共同学习~</p>

<p>判断浏览器类型：<br/>
$.browser.mozilla = /firefox/.test(navigator.userAgent.toLowerCase());<br/>
$.browser.webkit = /webkit/.test(navigator.userAgent.toLowerCase());<br/>
$.browser.opera = /opera/.test(navigator.userAgent.toLowerCase());<br/>
$.browser.msie = /msie/.test(navigator.userAgent.toLowerCase());<br/>
等号后面的表达式返回的就是 true/false， 可以直接用来替换原来的 $.browser.msie 等。</p>

<p>本文链接：<a href="http://mirrur.github.io/blog/2014/09/15/jquery1-dot-9-xia-jian-ce-liu-lan-qi-lei-xing-he-ban-ben/">jquery1.9 下检测浏览器类型和版本</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IE 8 error with EOT: CSS3111]]></title>
    <link href="http://mirrur.github.io/blog/2014/09/15/ie-8-error-with-eot-css3111/"/>
    <updated>2014-09-15T14:22:32+08:00</updated>
    <id>http://mirrur.github.io/blog/2014/09/15/ie-8-error-with-eot-css3111</id>
    <content type="html"><![CDATA[<p>在项目中用到了@font-face引入网页字体，在ie8中却总是报css3111这样的错误。解决办法：</p>

<p>1 在以下网站中尝试，重新生成.eot文件<br/>
<a href="http://www.font2web.com/">http://www.font2web.com/</a> <br/>
<a href="http://www.fontsquirrel.com/fontface/generator">http://www.fontsquirrel.com/fontface/generator</a><br/>
2 如果还不行的话，那应该是字体本身的问题，如果字体的Fontname 和 Family Name 名字不一致的话 在ie6-8浏览器中就会有那样的错误，解决这问题的办法：<br/>
① 先下载<a href="http://sourceforge.net/projects/fontforge/">FontForge</a>软件并安装<br/>
② 打开字体文件<br/>
③ 然后在菜单中选择Element > Font Info<br/>
④ 确保Fontname, Family Name and Name for Humans三个名称一致<br/>
⑤ 将修改后的font文件保存为TTF或OTF格式，用在线字体转换器(上面网址中的一个)转换成你要的格式，就ok了~</p>

<p>本文链接：<a href="http://mirrur.github.io/blog/2014/09/15/ie-8-error-with-eot-css3111/">IE 8 error with EOT: CSS3111</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IE layout 布局的认识]]></title>
    <link href="http://mirrur.github.io/blog/2014/09/15/ie-layout-bu-ju-de-ren-shi/"/>
    <updated>2014-09-15T12:51:51+08:00</updated>
    <id>http://mirrur.github.io/blog/2014/09/15/ie-layout-bu-ju-de-ren-shi</id>
    <content type="html"><![CDATA[<p>ie与大多数浏览器的表现不一致有一个重要原因是，ie显示引擎中使用了layout布局，是很多显示bug的根源。</p>

<p>windows上的ie使用布局概念来控制元素的尺寸和定位。拥有布局的元素负责本身及其子元素的尺寸设置和定位。没拥有布局的元素，其尺寸和位置由最近的拥有布局的祖先元素控制。</p>

<p>ie为毛要这么做呢？主要是为了减少性能开销。</p>

<p>默认情况下拥有布局的元素：<br/>
body, html, table, tr, td,<br/>
img, hr, input, select, textarea, button<br/>
iframe, embed, object, applet, ,marquee</p>

<p>如何查看元素是否拥有布局？javascript的hasLayout，返回true 或 false，hasLayout是只读属性，无法设置。</p>

<p>如何使元素拥有布局？ 通过设置一些css属性会自动触发ie的layout：<br/>
float: left/ right<br/>
display: inline-block<br/>
width/height/zoom: 任何值<br/>
writing-mode: tb-rl<br/>
ie7中，触发布局的还有：<br/>
overflow: hidden/scroll/auto<br/>
min-width:任何值<br/>
max-width:除none之外的任何值</p>

<p>ie7虽说已修复了大多数与布局相关的问题，但其解决方法是找到常见的显示bug，然后通过在代码中创建例外来处理它们，而不是解决底层问题。<br/>
ie8使用全新的显示引擎，据称不用hasLayout属性，故解决了这些问题的根源。</p>

<p>本文链接：<a href="http://mirrur.github.io/blog/2014/09/15/ie-layout-bu-ju-de-ren-shi/">IE layout布局的认识</a></p>
]]></content>
  </entry>
  
</feed>
